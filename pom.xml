<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.patrodyne.jvnet</groupId>
	<artifactId>hisrc-hyperjaxb-project</artifactId>
	<version>2.2.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>HiSrc HyperJAXB</name>
	<description>HiSrc HyperJAXB is an open source project which provides JPA relational persistence for JAXB objects.</description>
	<url>https://github.com/patrodyne/hisrc-hyperjaxb</url>
	<inceptionYear>2005</inceptionYear>
	<licenses>
		<license>
			<name>BSD 3-Clause License</name>
			<url>https://raw.githubusercontent.com/patrodyne/hisrc-hyperjaxb/master/LICENSE.md</url>
			<distribution>repo or manual</distribution>
			<comments>HiSrc HyperJAXB Project license is the 3-clause BSD license which is compatible with GPL. HiSrc HyperJAXB Project license does not require you to include any acknowledgments for HiSrc HyperJAXB Project in advertising materials for your software.</comments>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>patrodyne</id>
			<name>Rick O'Sullivan</name>
			<email>rick.osullivan@patrodyne.org</email>
			<roles>
				<role>maintainer</role>
			</roles>
		</developer>
		<developer>
			<id>highsource</id>
			<name>Aleksei Valikov</name>
			<roles>
				<role>architect (late)</role>
			</roles>
		</developer>
	</developers>
	<modules>
		<!-- General -->
		<module>ejb</module>
		<module>opt</module>
		<module>maven</module>
	</modules>
	<scm>
		<connection>scm:git:git@github.com:patrodyne/hisrc-hyperjaxb.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/patrodyne/hisrc-hyperjaxb.git</developerConnection>
		<url>https://github.com/patrodyne/hisrc-hyperjaxb/tree/master</url>
	  <tag>HEAD</tag>
  </scm>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/patrodyne/hisrc-hyperjaxb/issues</url>
	</issueManagement>
	<!-- OSS Repository Hosting <https://central.sonatype.org/publish/publish-guide/> -->
	<distributionManagement>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<properties>
		<build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
		<maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
		<maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
		<maven-bundle-plugin.version>5.1.9</maven-bundle-plugin.version>
		<maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.5.0</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.2.1</maven-enforcer-plugin.version>
		<maven-failsafe-plugin.version>3.1.2</maven-failsafe-plugin.version>
		<maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
		<maven-install-plugin.version>3.1.0</maven-install-plugin.version>
		<maven-invoker-plugin.version>3.4.0</maven-invoker-plugin.version>
		<maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
		<maven-jxr-plugin.version>3.3.2</maven-jxr-plugin.version>
		<maven-project-info-reports-plugin.version>3.4.2</maven-project-info-reports-plugin.version>
		<maven-release-plugin.version>3.0.0-M7</maven-release-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<maven-site-plugin.version>4.0.0-M12</maven-site-plugin.version>
		<maven-source-plugin.version>3.3.0</maven-source-plugin.version>
		<maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
		<maven-surefire-report-plugin.version>3.2.3</maven-surefire-report-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
		<plantuml-generator-maven-plugin.version>2.0.0</plantuml-generator-maven-plugin.version>
		<versions-maven-plugin.version>2.14.2</versions-maven-plugin.version>

		<activation-api.version>2.1.2</activation-api.version>
		<activation-imp.version>2.0.1</activation-imp.version>
		<annotation.version>2.1.1</annotation.version>
		<derby.version>10.17.1.0</derby.version>
		<eclipselink.version>4.0.2</eclipselink.version>
		<ehcache.version>3.10.8</ehcache.version>
		<guice.version>5.1.0</guice.version>
		<hibernate-series.version>6.4.1.Final</hibernate-series.version>
		<HikariCP.version>5.1.0</HikariCP.version>
		<hisrc-basicjaxb-annox-parser.version>2.2.0-SNAPSHOT</hisrc-basicjaxb-annox-parser.version>
		<hisrc-basicjaxb.version>2.2.0-SNAPSHOT</hisrc-basicjaxb.version>
		<hisrc-higherjaxb-maven-plugin.version>2.2.0-SNAPSHOT</hisrc-higherjaxb-maven-plugin.version>
		<hisrc-hyperjaxb-annox-plugin.version>2.2.0-SNAPSHOT</hisrc-hyperjaxb-annox-plugin.version>
		<h2database.version>2.2.224</h2database.version>
		<javassist.version>3.30.2-GA</javassist.version>
		<jpa-api.version>3.1.0</jpa-api.version>
		<jaxb-api.version>4.0.1</jaxb-api.version>
		<jaxb-imp.version>4.0.4</jaxb-imp.version>
		<junit-jupiter.version>5.10.1</junit-jupiter.version>
		<junit-platform.version>1.10.1</junit-platform.version>
		<m2e.jpa.activation>false</m2e.jpa.activation>
		<maven.compiler.release>11</maven.compiler.release>
		<maven-min.version>3.8.4</maven-min.version>
		<maven-api.version>3.9.6</maven-api.version>
		<maven-plugin-plugin.version>3.11.0</maven-plugin-plugin.version>
		<maven-plugin-testing.version>3.3.0</maven-plugin-testing.version>
		<maven-resolver.version>1.9.18</maven-resolver.version>
		<postgresql.version>42.7.1</postgresql.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<schemacrawler.version>16.20.8</schemacrawler.version>
		<slf4j.version>2.0.9</slf4j.version>
		<weld.version>5.1.2.Final</weld.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>jakarta.activation</groupId>
				<artifactId>jakarta.activation-api</artifactId>
				<version>${activation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.angus</groupId>
				<artifactId>angus-activation</artifactId>
				<version>${activation-imp.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.annotation</groupId>
				<artifactId>jakarta.annotation-api</artifactId>
				<version>${annotation.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-basicjaxb-runtime</artifactId>
				<version>${hisrc-basicjaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-basicjaxb-testing</artifactId>
				<version>${hisrc-basicjaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-basicjaxb-tools</artifactId>
				<version>${hisrc-basicjaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-basicjaxb-plugins</artifactId>
				<version>${hisrc-basicjaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-annox-plugin</artifactId>
				<version>${hisrc-hyperjaxb-annox-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-basicjaxb-ant</artifactId>
				<version>${hisrc-basicjaxb.version}</version>
			</dependency>
			<!-- HyperJAXB Maven Plugin-->
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-maven-plugin</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-maven-plugin-testing</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-ejb-roundtrip</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-ejb-runtime</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-ejb-schemas</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-ejb-schemas-persistence</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-ejb-schemas-customizations</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-ejb-plugin</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- HigherJAXB Maven Plugin -->
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-higherjaxb-maven-plugin</artifactId>
				<version>${hisrc-higherjaxb-maven-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-higherjaxb-maven-plugin-core</artifactId>
				<version>${hisrc-higherjaxb-maven-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-higherjaxb-maven-plugin-testing</artifactId>
				<version>${hisrc-higherjaxb-maven-plugin.version}</version>
			</dependency>
			<!-- JAXB -->
			<dependency>
				<groupId>jakarta.xml.bind</groupId>
				<artifactId>jakarta.xml.bind-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>jaxb-runtime</artifactId>
				<version>${jaxb-imp.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${jaxb-imp.version}</version>
			</dependency>
			<!-- JAXB XJC -->
			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>jaxb-xjc</artifactId>
				<version>${jaxb-imp.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>codemodel</artifactId>
				<version>${jaxb-imp.version}</version>
			</dependency>
			<!-- JUnit -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit-jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit-jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>${junit-jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-suite</artifactId>
				<version>${junit-platform.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.14.0</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.9.4</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.15.1</version>
			</dependency>
			<dependency>
				<groupId>net.sourceforge.collections</groupId>
				<artifactId>collections-generic</artifactId>
				<version>4.01</version>
			</dependency>
			<!-- SLF4J -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.enterprise</groupId>
				<artifactId>jakarta.enterprise.cdi-api</artifactId>
				<version>4.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.weld.se</groupId>
				<artifactId>weld-se-core</artifactId>
				<version>${weld.version}</version>
			</dependency>
			<dependency>
				<groupId>io.smallrye</groupId>
				<artifactId>jandex</artifactId>
				<version>3.1.6</version>
			</dependency>
			<!-- Jakarta Persistence API -->
			<dependency>
				<groupId>jakarta.persistence</groupId>
				<artifactId>jakarta.persistence-api</artifactId>
				<version>${jpa-api.version}</version>
			</dependency>
			<!--
			<dependency>
				<groupId>jakarta.transaction</groupId>
				<artifactId>jakarta.transaction-api</artifactId>
				<version>2.0.1</version>
			</dependency>
			-->
			<!-- Eclipselink -->
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>eclipselink</artifactId>
				<version>${eclipselink.version}</version>
				<exclusions>
					<!-- In favor of org.glassfish.jaxb:jaxb-xjc -->
					<exclusion>
						<groupId>com.sun.xml.bind</groupId>
						<artifactId>jaxb-xjc</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.extension</artifactId>
				<version>${eclipselink.version}</version>
				<exclusions>
					<!-- In favor of org.eclipse.persistence:eclipselink -->
					<exclusion>
						<groupId>org.eclipse.persistence</groupId>
						<artifactId>org.eclipse.persistence.core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-opt-eclipselink</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate.orm</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate-series.version}</version>
				<exclusions>
					<!-- In favor of io.smallrye:jandex -->
					<exclusion>
						<groupId>org.jboss</groupId>
						<artifactId>jandex</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate.orm</groupId>
				<artifactId>hibernate-jcache</artifactId>
				<version>${hibernate-series.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.hibernate.orm</groupId>
						<artifactId>hibernate-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate.orm</groupId>
				<artifactId>hibernate-hikaricp</artifactId>
				<version>${hibernate-series.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.hibernate.orm</groupId>
						<artifactId>hibernate-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.logging</groupId>
				<artifactId>jboss-logging</artifactId>
				<version>3.5.3.Final</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate.orm</groupId>
				<artifactId>hibernate-jpamodelgen</artifactId>
				<version>${hibernate-series.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<scope>runtime</scope>
				<version>${ehcache.version}</version>
			</dependency>
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-hyperjaxb-opt-hibernate</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- Hikari JDBC Connection Pool -->
			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${HikariCP.version}</version>
			</dependency>
			<!-- H2 Database -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2database.version}</version>
			</dependency>
			<!-- PostgreSQL Database -->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
			<!-- Derby Database -->
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${derby.version}</version>
			</dependency>
			<!-- Saxon -->
			<dependency>
				<groupId>net.sf.saxon</groupId>
				<artifactId>saxon</artifactId>
				<version>8.7</version>
			</dependency>
			<dependency>
				<groupId>net.sf.saxon</groupId>
				<artifactId>saxon-dom</artifactId>
				<version>8.7</version>
			</dependency>
			<!-- SchemaCrawler -->
			<dependency>
				<groupId>us.fatehi</groupId>
				<artifactId>schemacrawler</artifactId>
				<version>${schemacrawler.version}</version>
				<exclusions>
					<!-- In favor of org.slf4j:slf4j-simple -->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-nop</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>us.fatehi</groupId>
				<artifactId>schemacrawler-postgresql</artifactId>
				<version>${schemacrawler.version}</version>
				<exclusions>
					<!-- In favor of org.slf4j:slf4j-simple -->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-nop</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- XMLUnit -->
			<dependency>
				<groupId>xmlunit</groupId>
				<artifactId>xmlunit</artifactId>
				<version>1.6</version>
			</dependency>
			<!-- Annox -->
			<dependency>
				<groupId>org.patrodyne.jvnet</groupId>
				<artifactId>hisrc-basicjaxb-annox-parser</artifactId>
				<version>${hisrc-basicjaxb-annox-parser.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>4.0.0</version>
			</dependency>
			<!-- Maven JSR-330 Dependency Injection -->
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${guice.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Maven API -->
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-artifact</artifactId>
				<version>${maven-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<!--
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-builder-support</artifactId>
				<version>${maven-api.version}</version>
				<scope>provided</scope>
			</dependency>
			-->
			<dependency>
				<groupId>org.apache.maven.plugin-testing</groupId>
				<artifactId>maven-plugin-testing-tools</artifactId>
				<version>${maven-plugin-testing.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-model</artifactId>
				<version>${maven-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<!--
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-model-builder</artifactId>
				<version>${maven-api.version}</version>
				<scope>provided</scope>
			</dependency>
			-->
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>${maven-api.version}</version>
				<scope>provided</scope>
				<exclusions>
					<!-- In favor of jakarta.annotation:jakarta.annotation-api -->
					<exclusion>
						<groupId>javax.annotation</groupId>
						<artifactId>javax.annotation-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-core</artifactId>
				<version>${maven-api.version}</version>
				<scope>provided</scope>
				<exclusions>
					<!-- In favor of jakarta.inject:jakarta.inject-api -->
					<exclusion>
						<groupId>javax.inject</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-settings</artifactId>
				<version>${maven-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugin-tools</groupId>
				<artifactId>maven-plugin-annotations</artifactId>
				<version>${maven-plugin-plugin.version}</version>
			</dependency>
			<!-- Maven Artifact Resolver and Transport -->
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-resolver-provider</artifactId>
				<version>${maven-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.resolver</groupId>
				<artifactId>maven-resolver-connector-basic</artifactId>
				<version>${maven-resolver.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.resolver</groupId>
				<artifactId>maven-resolver-transport-file</artifactId>
				<version>${maven-resolver.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.resolver</groupId>
				<artifactId>maven-resolver-transport-http</artifactId>
				<version>${maven-resolver.version}</version>
				<scope>provided</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<build>
		<defaultGoal>install</defaultGoal>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant-junitlauncher</artifactId>
							<version>1.10.14</version>
						</dependency>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant-apache-xalan2</artifactId>
							<version>1.10.14</version>
						</dependency>
						<dependency>
							<groupId>ant</groupId>
							<artifactId>ant-optional</artifactId>
							<version>1.5.3-1</version>
						</dependency>
						<dependency>
							<groupId>org.junit.platform</groupId>
							<artifactId>junit-platform-console-standalone</artifactId>
							<version>${junit-platform.version}</version>
						</dependency>
						<dependency>
							<groupId>org.junit.jupiter</groupId>
							<artifactId>junit-jupiter-api</artifactId>
							<version>${junit-jupiter.version}</version>
						</dependency>
						<dependency>
							<groupId>org.junit.jupiter</groupId>
							<artifactId>junit-jupiter-engine</artifactId>
							<version>${junit-jupiter.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<compilerArgs>
							<arg>-proc:full</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
					<!-- Disable in favor of nexus-staging-maven-plugin -->
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>${maven-invoker-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/.placeholder</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<argLine>${env.JVM_SYS_ARGS}</argLine>
						<systemPropertiesFile>${root.basedir}/src/test/resources/jvmsystem.properties</systemPropertiesFile>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-report-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${maven-jxr-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven-project-info-reports-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
					<configuration>
						<ruleSet>
							<ignoreVersions>
                                <ignoreVersion>
                                    <type>regex</type>
                                    <version>(.+\.Alpha\d|.+-alpha-\d)</version>
                                </ignoreVersion>
								<ignoreVersion>
									<type>regex</type>
									<version>.+-M\d</version>
								</ignoreVersion>
								<ignoreVersion>
									<type>regex</type>
									<version>.+[\.-](CR|RC)\d</version>
								</ignoreVersion>
							</ignoreVersions>
						</ruleSet>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.patrodyne.jvnet</groupId>
					<artifactId>hisrc-higherjaxb-maven-plugin</artifactId>
					<version>${hisrc-higherjaxb-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven-plugin-plugin.version}</version>
					<executions>
						<?m2e ignore?>
						<execution>
							<id>mojo-descriptor</id>
							<phase>process-classes</phase>
							<goals>
								<!-- Generate META-INF/maven/plugin.xml -->
								<goal>descriptor</goal>
							</goals>
							<configuration>
								<checkExpectedProvidedScope>false</checkExpectedProvidedScope>
								<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
							</configuration>
						</execution>
						<execution>
							<id>help-goal</id>
							<goals>
								<!-- Generate {package}/HelpMojo.java -->
								<goal>helpmojo</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<?m2e ignore?>
						<id>echo-build-properties</id>
						<phase>validate</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echoproperties destfile="${project.build.directory}/build.properties" />
								<echo level="info">Generated ${project.build.directory}/build.properties</echo>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<releaseProfiles>nexus-deploy</releaseProfiles>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<doclint>all,-missing</doclint>
							<failOnError>false</failOnError>
							<tags>
								<tag>
									<name>Retention</name>
									<placement>X</placement>
								</tag>
								<tag>
									<name>Target</name>
									<placement>X</placement>
								</tag>
							</tags>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<?m2e ignore?>
						<id>enforce-java-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>${maven.compiler.release}</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<version>${maven-min.version}</version>
								</requireMavenVersion>
								<requirePluginVersions>
									<message>Best Practice is to always define plugin versions!</message>
									<banSnapshots>false</banSnapshots>
								</requirePluginVersions>
							</rules>    
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<!-- https://help.sonatype.com/repomanager2/staging-releases/configuring-your-project-for-deployment -->
			<!-- https://www.baeldung.com/maven-deploy-nexus -->
			<id>nexus-deploy</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${nexus-staging-maven-plugin.version}</version>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>default-deploy</id>
								<phase>deploy</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
						<!-- Skip staging the components locally when connecting to the repository manager -->
						<!-- We do not need staging for a simple deployment of -SNAPSHOT artifacts to Nexus -->
						<!-- Auto close the staging repository and release -->
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<skipStaging>true</skipStaging>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>all</id>
			<modules />
		</profile>
		<profile>
			<id>tests-0</id>
			<modules />
		</profile>
		<profile>
			<id>tests-1</id>
			<modules />
		</profile>
		<profile>
			<id>tests-2</id>
			<modules />
		</profile>
		<profile>
			<id>assembly</id>
			<modules>
				<module>ejb</module>
			</modules>
		</profile>
		<!-- Hints:
			mvn -Peclipselink clean compile exec:java
			Eclipse > Project > Properties > Maven > Acive Profiles: eclipselink
			See also:
				src/test/resources/jvmsystem.properties
				org.jvnet.hyperjaxb.persistence=<eclipselink|hibernate>
		-->
		<profile>
			<id>eclipselink</id>
			<activation>
				<property>
					<name>org.jvnet.hyperjaxb.persistence</name>
					<value>eclipselink</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<?m2e ignore?>
								<id>runtime</id>
								<phase>compile</phase>
								<configuration>
									<target>
										<mkdir dir="${project.build.directory}/test-database-sql" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Hints:
			mvn -Phibernate,all clean test
			Eclipse > Project > Properties > Maven > Acive Profiles: hibernate
			See also:
				src/test/resources/jvmsystem.properties
				org.jvnet.hyperjaxb.persistence=<eclipselink|hibernate>
		-->
		<profile>
			<id>hibernate</id>
			<activation>
				<property>
					<name>org.jvnet.hyperjaxb.persistence</name>
					<value>!eclipselink</value>
				</property>
			</activation>
		</profile>
	</profiles>
</project>
